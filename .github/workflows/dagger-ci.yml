name: Dagger CI

on:
  push:
    branches: [ main, 'pr/*', 'fix/*', 'pr/fix/*', 'pr/fix/openspot-status-response-clean' ]
  pull_request:
    branches: [ main ]

jobs:
  dagger:
    name: Run Dagger CI Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Install Dagger CLI
        run: |
          echo "Installing Dagger CLI"
          DAGGER_VERSION="v0.18.19"
          # Download from GitHub releases (more secure than install script)
          curl -fsSL "https://github.com/dagger/dagger/releases/download/${DAGGER_VERSION}/dagger_v${DAGGER_VERSION#v}_linux_amd64.tar.gz" -o dagger.tar.gz
          # Verify it's a valid tar.gz file
          file dagger.tar.gz | grep -q "gzip compressed data"
          # Verify SHA256 checksum (published in releases checksums.txt)
          # Expected checksum for v0.18.19 linux_amd64 (from dagger/dagger checksums.txt)
          EXPECTED_SHA="f13f361fb38980d04e2cbe80eb1faf95786455f61c64e5d4f2cffecb0fedfa28"
          echo "${EXPECTED_SHA}  dagger.tar.gz" | sha256sum -c -
          # Extract into a temporary directory to avoid conflicts if a file named 'dagger' exists
          TMPDIR=$(mktemp -d)
          tar -xzf dagger.tar.gz -C "${TMPDIR}"
          if [ ! -x "${TMPDIR}/dagger" ]; then
            chmod +x "${TMPDIR}/dagger" || true
          fi
          sudo mv -f "${TMPDIR}/dagger" /usr/local/bin/dagger
          rm -rf "${TMPDIR}"
          dagger version

      - name: Run Dagger CI Pipeline
        run: |
          dagger call ci --source=.
